#include <iostream> /* iostream 헤더파일 포함 전처리기(선행처리기, preprocessor)
iostream에는 표준 입출력 필요 클래스들과 객체들이 있음.
 cin과 cout 같은 객체 사용 시 필수*/
using namespace std; /*코드는 C++ 프로그램에서 변수명이나 함수명과 같은 수많은 식별자들이 사용됨.
이들 이름들은 이름 공간(name spcae)라고 하는 영역으로 분리 저장됨.
C++에서 이름 사용 시에는 반드시 "공간::이름"과 같이 공간명을 이름 앞에 붙여야 한다.
출력을 담당하는 객체 cout은 std라고 하는 이름 공간에 속한다고 하는 것. 
따라서 cout은 원칙적으로 std::cout << "[string]" << std::endl; 로 적어야 정상
매번 std 붙이기 번거롭기에, using 이라는 지시어임. 
즉, 사용하는 이름 공간을 std로 설정한 문장. */
// 이게 하나면은 별거 아니지만, 여러개가 되면 번거로워짐. 

int main(void) { //main은 함수명. int는 리턴값. ()안에는 매개변수(parameter,인자값,arguments) //void는 없다는 의미임. 
    // main() 함수는 prj내에서 오로지 하나만 존재해야함.
    // 프로그램의 시작점이기 때문임. 
    cout << 10 << "개의 사과가 있습니다\n";

    cout << "나의 첫 번째 C++프로그램" << endl; 
    /*cout << "나의 첫 번째 C++프로그램" << endl; 
    endl = endofline : 줄의 끝. 개행을 시켜줌(이전 걸 끝내고, 새로)
    count : 콘솔 데이터 출력 객체 
    << : 꺾쇠 연산자. 어떤 데이터도 연산자를 사용해 출력 가능함. 
    한줄에 여러개 <<연산자 사용 가능. 출력은 왼쪽에서 오른쪽으로 출력
    */
   
    // main함수 특수성으로 return 생락 가능하지만, 사용자정의함수 만들 시 필수
    // 0 : 정수값이자 리턴값 int에 대한 반환. 프로그램 정상 종료 알림. 
    return 0;
}

// Ctrl + Shift + A : 새 항목 파일 생성
// Ctrl + F5 : 디버깅 안하고 바로 실행
// Ctrl + Shift + / : 주석 처리 및 주석 처리 풀기